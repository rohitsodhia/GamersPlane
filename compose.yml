volumes:
    postgres_db:
        driver: local
        name: gp_postgres_db

services:
    proxy:
        container_name: gamersplane-proxy
        image: nginx:1.15-alpine
        volumes:
            - ./docker/nginx/nginx.${ENVIRONMENT}.conf:/etc/nginx/conf.d/site.conf
        depends_on:
            - api
            - frontend

    api:
        container_name: gamersplane-api
        build:
            context: ./api
        ports:
            - 8000:8000
        env_file:
            - ./.env
        depends_on:
            - postgres
        restart: always

    postgres:
        image: postgres:16.4
        environment:
            - POSTGRES_USER=${DATABASE_USER}
            - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
            - POSTGRES_DB=${DATABASE_DATABASE}
        volumes:
            # - ./docker/postgres:/docker-entrypoint-initdb.d
            - postgres_db:/var/lib/postgresql/data

    cache:
        container_name: gamersplane-cache
        image: valkey/valkey:8.1-alpine

    frontend:
        build:
            context: ./frontend
            target: ${ENVIRONMENT}
            dockerfile: ../docker/Dockerfile-nextjs
        environment:
            - WATCHPACK_POLLING=true
        volumes:
                - ./frontend:/app
                # - /app/node_modules
                # - /app/.next
