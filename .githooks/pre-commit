#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

# Redirect output to stderr.
# exec 1>&2

exit_code=0

py_files=$(
	git diff --cached --find-copies --find-renames --name-only --diff-filter=ACMRTXBU |
		grep -E "\.py"
)

if [[ -n $py_files ]]; then
	for file in $py_files; do
		black_output=$(black $file 2>&1 | grep -E "reformatted")
		if [[ $black_output ]]; then
			echo "$file was edited by Black!"
			exit_code=1
		fi
	done
fi

if [[ $exit_code == 1 ]]; then
	printf "\nAdd the changes to commit\n"
fi

exit $exit_code
